#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(ql:quickload '(:usocket :prbs :bit-wise) :silent t)

(defpackage :ros.script.recv.3669479074
  (:use :cl :usocket :prbs.err :bit-wise))
(in-package :ros.script.recv.3669479074)

(defun read-datagram (socket)
  (handler-case (multiple-value-bind (data size remh remp) (usocket:socket-receive socket nil 512)
                  (declare (ignore remp remh))
                  (values data size))
    #+sbcl (sb-sys:interactive-interrupt ()
             (sb-ext:exit))))

(defun create-receiver (port degree)
  (let ((socket (usocket:socket-connect nil nil
                                        :protocol :datagram
                                        :element-type '(unsigned-byte 8)
                                        :local-host "127.0.0.1"
                                        :local-port port)))
    (unwind-protect
         ;; receive some bytes to lock with
         (multiple-value-bind (buffer size) (read-datagram socket)
           (let ((err (lock (bit-wise:bytes->bits (coerce (subseq buffer 0 size) 'list)) degree)))
             (if err 
                 (labels ((rec ()
                            (multiple-value-bind (buff size) (read-datagram socket)
                              (multiple-value-bind (a b) (funcall err (bit-wise:bytes->bits (coerce (subseq buff 0 size) 'list)))
                                (format t "~F% errors (~A errs, ~A bits)~%" (coerce (* 100 (/ a b)) 'float) a b)))
                            (rec)))
                   (format t "Locked on ~A bytes~%" size)
                   (rec))
                 (write-line "Unable to lock. Increase the block size in the sender."))))
      (usocket:socket-close socket))))
  
(defun main (&rest argv)
  (if (eq 1 (length argv))
      (create-receiver 2002 (parse-integer (car argv)))
      (mapc #'write-line '("Usage: recv <polynomial degree>"
                           ""
                           "Run this concurrently with the sender script, and use the same polynomial degree as the sender."))))
